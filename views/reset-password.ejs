<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Reset Password</title>
    <style>
      body {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        margin: 0;
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
        background-color: #f0f2f5;
        color: #333;
      }

      .container {
        background-color: #fff;
        padding: 2rem;
        border-radius: 12px;
        box-shadow:
          0 4px 6px rgba(0, 0, 0, 0.1),
          0 1px 3px rgba(0, 0, 0, 0.08);
        text-align: center;
        width: 100%;
        max-width: 400px;
        transition: transform 0.3s ease;
      }

      .container:hover {
        transform: translateY(-5px);
      }

      h2 {
        margin-bottom: 1.5rem;
        color: #2c3e50;
        font-size: 1.8rem;
      }

      label {
        display: block;
        margin-bottom: 0.5rem;
        text-align: left;
        font-weight: 600;
        color: #34495e;
      }

      input[type="password"],
      input[type="text"] {
        width: 100%;
        padding: 0.75rem;
        margin-bottom: 1.5rem;
        border: 2px solid #ddd;
        border-radius: 6px;
        font-size: 1rem;
        transition: border-color 0.3s ease;
      }

      input[type="password"]:focus,
      input[type="text"]:focus {
        outline: none;
        border-color: #3498db;
        box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.2);
      }

      .password-container {
        position: relative;
        display: flex;
        align-items: center;
      }

      .password-container input {
        padding-right: 2.5rem;
      }

      .password-container .toggle-password {
        position: absolute;
        right: 0.75rem;
        cursor: pointer;
        color: #7f8c8d;
        transition: color 0.3s ease;
      }

      .password-container .toggle-password:hover {
        color: #34495e;
      }

      button {
        width: 100%;
        padding: 0.75rem;
        background-color: #3498db;
        color: #fff;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        font-size: 1rem;
        font-weight: 600;
        transition:
          background-color 0.3s ease,
          transform 0.1s ease;
      }

      button:hover {
        background-color: #2980b9;
      }

      button:active {
        transform: scale(0.98);
      }

      .error-message {
        color: #e74c3c;
        display: none;
        margin-top: 1rem;
        font-size: 0.9rem;
        font-weight: 600;
      }

      .success-message {
        display: none;
        color: #2ecc71;
        font-size: 1.2rem;
        font-weight: 600;
        margin-top: 1rem;
      }

      .checkmark {
        width: 150px;
        height: 150px;
        border-radius: 50%;
        display: block;
        stroke-width: 2;
        stroke: #2ecc71;
        stroke-miterlimit: 10;
        margin: 10% auto;
        box-shadow: inset 0px 0px 0px #2ecc71;
        animation:
          fill 0.4s ease-in-out 0.4s forwards,
          scale 0.3s ease-in-out 0.9s both;
      }

      .checkmark__circle {
        stroke-dasharray: 166;
        stroke-dashoffset: 166;
        stroke-width: 1;
        stroke-miterlimit: 10;
        stroke: #2ecc71;
        fill: none;
        animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;
      }

      .checkmark__check {
        transform-origin: 50% 50%;
        stroke-dasharray: 48;
        stroke-dashoffset: 48;
        animation: stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards;
      }

      @keyframes stroke {
        100% {
          stroke-dashoffset: 0;
        }
      }

      @keyframes scale {
        0%,
        100% {
          transform: none;
        }

        50% {
          transform: scale3d(1.1, 1.1, 1);
        }
      }

      @keyframes fill {
        100% {
          box-shadow: inset 0px 0px 0px 30px #2ecc71;
        }
      }
    </style>
  </head>

  <body>
    <div class="container">
      <h2>Reset Your Password</h2>
      <form id="reset-password-form" action="/reset-password" method="POST">
        <input type="hidden" name="token" value="<%= token %>" />
        <label for="password">New Password:</label>
        <div class="password-container">
          <input type="password" id="password" name="password" required />
          <span
            class="toggle-password"
            onclick="togglePasswordVisibility('password', this)"
            >üëÅÔ∏è</span
          >
        </div>
        <label for="repeatPassword">Re-enter Password:</label>
        <div class="password-container">
          <input
            type="password"
            id="repeatPassword"
            name="repeatPassword"
            required
          />
          <span
            class="toggle-password"
            onclick="togglePasswordVisibility('repeatPassword', this)"
            >üëÅÔ∏è</span
          >
        </div>
        <button type="submit">Reset Password</button>
      </form>
      <p id="error-message" class="error-message">
        Passwords do not match. Please try again.
      </p>
      <div id="success-message" class="success-message">
        <svg
          class="checkmark"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 52 52"
        >
          <circle
            class="checkmark__circle"
            cx="26"
            cy="26"
            r="25"
            fill="none"
          />
          <path
            class="checkmark__check"
            fill="none"
            d="M14.1 27.2l7.1 7.2 16.7-16.8"
          />
        </svg>
        <p>Password reset successfully!</p>
      </div>
    </div>

    <script>
      function togglePasswordVisibility(fieldId, toggleIcon) {
        const field = document.getElementById(fieldId);
        if (field.type === "password") {
          field.type = "text";
          toggleIcon.textContent = "üîí";
        } else {
          field.type = "password";
          toggleIcon.textContent = "üëÅÔ∏è";
        }
      }

      document
        .getElementById("reset-password-form")
        .addEventListener("submit", function (event) {
          event.preventDefault();
          const password = document.getElementById("password").value;
          const confirmPassword =
            document.getElementById("repeatPassword").value;
          const errorMessage = document.getElementById("error-message");
          const successMessage = document.getElementById("success-message");

          const passwordRegEx =
            /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,20}$/;

          if (!passwordRegEx.test(password)) {
            errorMessage.textContent =
              "Password must contain Minimum 8 and maximum 20 characters, at least one uppercase letter, one lowercase letter, one number, and one special character.";
            errorMessage.style.display = "block";
            successMessage.style.display = "none";
          } else if (password !== confirmPassword) {
            errorMessage.textContent =
              "Passwords do not match. Please try again.";
            errorMessage.style.display = "block";
            successMessage.style.display = "none";
          } else {
            errorMessage.style.display = "none";

            fetch("/reset-password", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({
                password: password,
                repeatPassword: confirmPassword,
                token: document.querySelector('input[name="token"]').value,
              }),
            })
              .then((response) => response.json())
              .then((data) => {
                if (data.message === "Password reset successfully") {
                  successMessage.style.display = "block";
                  document.getElementById("reset-password-form").style.display =
                    "none";
                } else {
                  errorMessage.textContent =
                    data.message || "An error occurred. Please try again.";
                  errorMessage.style.display = "block";
                }
              })
              .catch((error) => {
                console.error("Error:", error);
                errorMessage.textContent =
                  "An error occurred. Please try again.";
                errorMessage.style.display = "block";
              });
          }
        });
    </script>
  </body>
</html>
